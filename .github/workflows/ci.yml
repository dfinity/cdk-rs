name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  rust-version: 1.60.0

jobs:
  build:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.rust-version }}
          target: wasm32-unknown-unknown
      - name: Run builds
        run: |
          cargo build --workspace --exclude ic-cdk-optimizer --exclude ic-cdk-e2e-tests --target wasm32-unknown-unknown
          cargo build --workspace --exclude ic-cdk-optimizer --exclude ic-cdk-e2e-tests --target wasm32-unknown-unknown --release

  build-ic-cdk-optimizer:
    name: Build ic-cdk-optimizer
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.rust-version }}
      - name: Run builds
        run: |
          cargo build -p ic-cdk-optimizer

  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.rust-version }}
      - name: Run tests
        run: |
          cargo test --all-targets

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.rust-version }}
          components: rustfmt
      - name: Check formatting
        run: |
          cargo fmt --all -- --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.rust-version }}
          components: clippy
      - name: Run clippy
        run: |
          cargo clippy --tests --benches -- -D clippy::all
